name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build application
      run: |
        python build_all.py
    
    - name: Create release archive
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          cd dist && zip -r onix-${{ github.ref_name }}-windows-amd64.zip onix-windows-amd64/
        elif [ "${{ matrix.os }}" == "macos-latest" ]; then
          cd dist && zip -r onix-${{ github.ref_name }}-macos-amd64.zip onix-macos-amd64/
        else
          cd dist && tar -czf onix-${{ github.ref_name }}-linux-amd64.tar.gz onix-linux-amd64/
        fi
    
    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: onix-${{ github.ref_name }}-${{ matrix.os }}
        path: dist/*.zip dist/*.tar.gz